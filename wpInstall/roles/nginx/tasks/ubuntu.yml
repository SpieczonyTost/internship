- name: Check if already installed
  ansible.builtin.debug:
    msg: "{{ ansible_facts.packages['nginx'] | length }} versions of nginx are installed!"
  when: "'nginx' in ansible_facts.packages"

# - name: Check if file with repositories is present at /etc/apt/sources.list.d/nginx.list
#   stat:
#     path: "/etc/apt/sources.list.d/nginx.list"
#   register: nginx_list_stat

# - name: Insert file with repositories
#   ansible.builtin.copy:
#     src: nginx.list
#     dest: /etc/apt/sources.list.d/nginx.list
#     owner: root
#     group: root
#     mode: '0644'
#   when: "nginx_list_stat.stat.exists == false"

# - name: Add a key
#   ansible.builtin.shell: "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62"
#   when: "nginx_list_stat.stat.exists == false"

- name: Update repositories
  ansible.builtin.shell: apt-get update
  when: "not 'nginx' in ansible_facts.packages"

- name: Install nginx
  ansible.builtin.package:
    name: nginx
  when: "not 'nginx' in ansible_facts.packages"

# If installation of nginx fails comment these names ^^^ (and their contents) :
# - Check if file with repositories is present at ...
# - Insert file with repositories
# - Add a key
# - Install nginx
#
# AND ucomment this 
# - name: Install nginx
#   ansible.builtin.package:
#     name: nginx=1.18.0-0ubuntu1.4 
#   when: "not 'nginx' in ansible_facts.packages" 
# 

- name: Check if /etc/nginx/sites-available exists
  stat:
    path: /etc/nginx/sites-available
  register: sites_available_stat

- name: Check if /etc/nginx/sites-enabled exists
  stat:
    path: /etc/nginx/sites-enabled
  register: sites_enabled_stat

- name: Check if /etc/nginx/snippets exists
  stat:
    path: /etc/nginx/snippets
  register: snippets_stat

- name: Create /etc/nginx/sites-available
  ansible.builtin.file:
    path: /etc/nginx/sites-available
    recurse: true
    state: directory
    owner: root
    group: root
    mode: '0644'
  when: "sites_available_stat.stat.exists == false"

- name: Create /etc/nginx/sites-enabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    recurse: true
    state: directory
    owner: root
    group: root
    mode: '0644'
  when: "sites_enabled_stat.stat.exists == false"

- name: Create /etc/nginx/snippets
  ansible.builtin.file:
    path: /etc/nginx/snippets
    recurse: true
    state: directory
    owner: root
    group: root
    mode: '0644'
  when: "snippets_stat.stat.exists == false"

- name: Overrite the fastcgi-php.conf
  ansible.builtin.copy:
    src: fastcgi-php.conf
    dest: /etc/nginx/snippets/fastcgi-php.conf
    owner: root
    group: root
    mode: '0644'
  when: "sites_available_stat.stat.exists == false"

- name: Overrite the fastcgi.conf
  ansible.builtin.copy:
    src: fastcgi.conf
    dest: /etc/nginx/fastcgi.conf
    owner: root
    group: root
    mode: '0644'
  when: "sites_available_stat.stat.exists == false"

- name: Create symlink
  ansible.builtin.shell: "ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default"
  when: "sites_available_stat.stat.exists == false"

- name: Overrite the default file
  ansible.builtin.copy:
    src: default
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: '0644'
  when: "not 'nginx' in ansible_facts.packages"

- name: Overrite the nginx.conf
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  when: "not 'nginx' in ansible_facts.packages"

- name: Restart nginx
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: "not 'nginx' in ansible_facts.packages"

- name: Reload nginx
  ansible.builtin.systemd:
    name: nginx
    state: reloaded