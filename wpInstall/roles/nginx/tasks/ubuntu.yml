- name: Check if already installed
  ansible.builtin.debug:
    msg: "{{ ansible_facts.ohai_packages['nginx'] | length }} versions of nginx are installed!"
  when: "'nginx' in ansible_facts.ohai_packages"
  tags: [debug]

- name: Check if file with repositories is present at /etc/apt/sources.list.d/nginx.list
  stat:
    path: "/etc/apt/sources.list.d/nginx.list"
  register: nginx_list_stat
  tags: [system]

- name: Insert file with repositories
  ansible.builtin.copy:
    src: nginx.list
    dest: /etc/apt/sources.list.d/nginx.list
    owner: root
    group: root
    mode: '0644'
  when: "nginx_list_stat.stat.exists == false"
  tags: [system]

- name: Add a key
  ansible.builtin.shell: "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62"
  when: "nginx_list_stat.stat.exists == false"
  tags: [system]

- name: Update repositories
  ansible.builtin.shell: apt-get update
  when: "not 'nginx' in ansible_facts.ohai_packages"
  tags: [system]

- name: Install nginx
  ansible.builtin.package:
    name: nginx=1.24.0-1~focal 
  when: "not 'nginx' in ansible_facts.ohai_packages" 
  tags: [system]

# If installation of nginx fails comment these names ^^^ (and their contents) :
# - Check if file with repositories is present at ...
# - Insert file with repositories
# - Add a key
# - Install nginx
#
# AND ucomment this 
# - name: Install nginx
#   ansible.builtin.package:
#     name: nginx=1.18.0-0ubuntu1.4 
#   when: "not 'nginx' in ansible_facts.ohai_packages" 
#   tags: [system]

- name: Check if /etc/nginx/sites-available exists
  stat:
    path: /etc/nginx/sites-available
  register: sites_available_stat
  tags: [system]

- name: Check if /etc/nginx/sites-enabled exists
  stat:
    path: /etc/nginx/sites-enabled
  register: sites_enabled_stat
  tags: [system]

- name: Check if /etc/nginx/snippets exists
  stat:
    path: /etc/nginx/snippets
  register: snippets_stat
  tags: [system]

- name: Create /etc/nginx/sites-available
  ansible.builtin.file:
    path: /etc/nginx/sites-available
    recurse: true
    state: directory
    owner: root
    group: root
    mode: '0644'
  when: "sites_available_stat.stat.exists == false"
  tags: [system]

- name: Create /etc/nginx/sites-enabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    recurse: true
    state: directory
    owner: root
    group: root
    mode: '0644'
  when: "sites_enabled_stat.stat.exists == false"
  tags: [system]

- name: Create /etc/nginx/snippets
  ansible.builtin.file:
    path: /etc/nginx/snippets
    recurse: true
    state: directory
    owner: root
    group: root
    mode: '0644'
  when: "snippets_stat.stat.exists == false"
  tags: [system]

- name: Overrite the fastcgi-php.conf
  ansible.builtin.copy:
    src: fastcgi-php.conf
    dest: /etc/nginx/snippets/fastcgi-php.conf
    owner: root
    group: root
    mode: '0644'
  when: "sites_available_stat.stat.exists == false"

- name: Overrite the fastcgi.conf
  ansible.builtin.copy:
    src: fastcgi.conf
    dest: /etc/nginx/fastcgi.conf
    owner: root
    group: root
    mode: '0644'
  when: "sites_available_stat.stat.exists == false"

- name: Create symlink
  ansible.builtin.shell: "ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default"
  when: "sites_available_stat.stat.exists == false"
  tags: [system]
  
- name: Overrite the default file
  ansible.builtin.copy:
    src: default
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: '0644'
  when: "not 'nginx' in ansible_facts.ohai_packages"

- name: Overrite the nginx.conf
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  when: "not 'nginx' in ansible_facts.ohai_packages"

- name: Restart nginx
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: "not 'nginx' in ansible_facts.ohai_packages"

- name: Reload nginx
  ansible.builtin.systemd:
    name: nginx
    state: reloaded

- name: Add the user 'nginx_exporter'
  ansible.builtin.user:
    name: nginx_exporter
  tags: [ Nginx-Exporter ]

- name: Create a directory for nginx_exporter
  ansible.builtin.file:
    path: /opt/nginx_exporter
    state: directory
    recurse: true
    owner: nginx_exporter
    group: nginx_exporter
  tags: [ Nginx-Exporter ]

- name: Downloading and extracting nginx_exporter
  ansible.builtin.get_url:
    url: https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v0.11.0/nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz
    dest: /opt/nginx_exporter/
  tags: [ Nginx-Exporter ]

- name: Unarchive a file that is already on the remote machine
  ansible.builtin.unarchive:
    src: /opt/nginx_exporter/nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz
    dest: /opt/nginx_exporter/
    remote_src: yes

- name: Remove file .tar
  ansible.builtin.file:
    path: /opt/nginx_exporter/nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz
    state: absent

- name: Create daemon for nginx-exporter
  ansible.builtin.template:
    src: nginx-exporter.service.j2
    dest: /etc/systemd/system/nginx-exporter.service
  tags: [ Nginx-Exporter ]

- name: Restart nginx
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: "not 'nginx' in ansible_facts.ohai_packages"

- name: Reload nginx
  ansible.builtin.systemd:
    name: nginx
    state: reloaded
