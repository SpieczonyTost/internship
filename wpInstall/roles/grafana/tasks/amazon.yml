- name: Debug
  ansible.builtin.debug:
    msg: Me Me worky
    
- name: Check if packages were collected successfully
  ansible.builtin.debug:
    var: ansible_facts.packages['grafana']

- name: Check if file /etc/yum.repos.d/grafana.repo exists
  ansible.builtin.stat:
    path: /etc/yum.repos.d/grafana.repo
  register: grafana_repo

- name: Add the grafana repo file
  ansible.builtin.copy:
    src: grafana.repo
    dest: /etc/yum.repos.d/grafana.repo
    owner: root
    group: root
    mode: '0644'
  when: "grafana_repo.stat.exists == false"

- name: Install grafana
  ansible.builtin.yum:
    name: grafana
    state: present
  when: "ansible_facts.packages['grafana'] is undefined"

- name: Include handlers
  ansible.builtin.include_tasks:
    file: roles/grafana/handlers/main.yml

- name: Create a dashboard directory
  ansible.builtin.file:
    path: /etc/grafana/dashboards
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy the dashboard file
  ansible.builtin.copy:
    src: amazon_wp_dashboard.json
    dest: /etc/grafana/dashboards/amazon_wp_dashboard.json
    owner: root
    group: root
    mode: '0744'

- name: Create prometheus datasource
  community.grafana.grafana_datasource:
    name: "{{amazon_ds_name}}"
    url: "{{amazon_grafana_url}}"
    ds_type: "{{amazon_ds_type}}"
    ds_url: "{{amazon_ds_url}}"
    org_id: "{{amazon_org_id}}"
    grafana_user: "{{amazon_grafana_user}}"
    grafana_password: "{{amazon_grafana_password}}"
    is_default: true
    access: proxy
    tls_skip_verify: true
    uid: prometheusdatasource
  when: "ansible_facts.packages['grafana'] is undefined"

- name: Import Grafana dashboard 
  community.grafana.grafana_dashboard:
    url: "{{amazon_grafana_url}}"
    grafana_user: "{{amazon_grafana_user}}"
    grafana_password: "{{amazon_grafana_password}}"
    state: present
    commit_message: Updated by ansible
    overwrite: yes
    path: /etc/grafana/dashboards/amazon_wp_dashboard.json
