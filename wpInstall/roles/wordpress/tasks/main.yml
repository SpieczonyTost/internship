- name: Checking if wordpress was extracted
  ansible.builtin.shell:
    cmd: "ls /usr/share/nginx/html"
  register: wordpress_tar
  tags: [ wordpress ]

- name: Extract wordpress arch
  ansible.builtin.unarchive:
    src: http://wordpress.org/latest.tar.gz
    dest: /usr/share/nginx/html/
    remote_src: true
    owner: nginx
    group: nginx
    extra_opts: [--strip-components=1]
  tags: [ wordpress ]

- name: Create a directory for wordpress
  ansible.builtin.file:
    path: /usr/share/nginx/html/wp-content/uploads
    state: directory
    recurse: true
    owner: nginx
    group: nginx
    mode: 0644
  tags: [ wordpress ]

- name: Copy file to host
  ansible.builtin.template:
    src: wp-config.php.j2
    dest: /usr/share/nginx/html/wp-config.php
  tags: [ wordpress ]

- name: Checking if wordpressCli was extracted
  ansible.builtin.shell:
    cmd: "ls /tmp/"
  register: wordpressCli
  tags: [ wordpress ]

- name: Download WP cli
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: /tmp/
  when: "wordpressCli != '/tmp/wp-cli.phar'"
  tags: [ wordpress ]
  
- name: Renaming and changing rights
  ansible.builtin.copy:
    src: /tmp/wp-cli.phar
    dest: /usr/local/bin/wp
    mode: u+rx,g-rx,o-rwx
    owner: nginx
    group: nginx
    remote_src: true
  tags: [ wordpress ] 

- name: WP core installation
  ansible.builtin.shell: "sudo -u nginx wp core install --url={{ wp_url }} --title={{ wp_title }} --admin_name={{ wp_admin }} --admin_password={{ wp_password }} --admin_email={{ wp_email }}"
  args:
    chdir: "/usr/share/nginx/html/"
  tags: [ wordpress ]

- name: Include handlers
  ansible.builtin.include_tasks:
    file: roles/wordpress/handlers/main.yml
  tags: [ wordpress ]